
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    server_names_hash_bucket_size  128;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    index index.html;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;

        location / {
        return 301 https://$host$request_uri;
    }
    }


     server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;

        server_name  localhost  www.localhost;
        root         /var/www;

        ssl_certificate /etc/letsencrypt/live/localhost.crt;
        ssl_certificate_key  /etc/letsencrypt/live/localhost.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # modern configuration
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # # OCSP stapling
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # ssl_trusted_certificate /etc/letsencrypt/live/localhost/chain.pem;

        # replace with the IP address of your resolver
        # resolver dns1.registrar-servers.com dns2.registrar-servers.com;

        location / {
            root /var/www/static-site;
            index index.html;
            try_files $uri $uri/ =404;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;

        server_name e-commerce.localhost www.e-commerce.localhost;

        ssl_certificate /etc/letsencrypt/live/e-commerce.localhost.crt;
        ssl_certificate_key  /etc/letsencrypt/live/e-commerce.localhost.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # modern configuration
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # # OCSP stapling
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # ssl_trusted_certificate /etc/letsencrypt/live/e-commerce.zoemhay.com/chain.pem;

        # # replace with the IP address of your resolver
        # resolver dns1.registrar-servers.com dns2.registrar-servers.com;


        location / {
            root /var/www/local-e-commerce-app/build;
            index index.html;
            try_files $uri /index.html;
        }

        location /api/ {
                proxy_pass http://e-commerce-server:8000/;
        }
    
    } 

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;

        server_name angular-e-commerce.localhost www.angular-e-commerce.localhost;


        ssl_certificate /etc/letsencrypt/live/angular-e-commerce.localhost.crt;
        ssl_certificate_key  /etc/letsencrypt/live/angular-e-commerce.localhost.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # modern configuration
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # # OCSP stapling
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # ssl_trusted_certificate /etc/letsencrypt/live/angular-e-commerce.localhost.com/chain.pem;

        # # replace with the IP address of your resolver
        # resolver dns1.registrar-servers.com dns2.registrar-servers.com;

        location / {
            root /var/www/local-angular-e-commerce-app;
            index index.html;
            try_files $uri /index.html;
        }

        location /api/ {
                proxy_pass http://localhost:8000/;
        }
    }
}